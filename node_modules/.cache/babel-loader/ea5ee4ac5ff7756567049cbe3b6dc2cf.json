{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pubsub from 'pubsub-js';\nimport MyHeader from \"./components/MyHeader\";\nimport MyList from \"./components/MyList\";\nimport MyFooter from \"./components/MyFooter\";\nexport default {\n  name: \"App\",\n  components: {\n    MyFooter: MyFooter,\n    MyList: MyList,\n    MyHeader: MyHeader\n  },\n  data: function data() {\n    return {\n      //捞储存在localStorage里的数据\n      //一开始没有数据，展示空数组\n      todos: JSON.parse(localStorage.getItem('todos')) || []\n    };\n  },\n  methods: {\n    //添加一个todo\n    addTodo: function addTodo(todoObj) {\n      this.todos.unshift(todoObj);\n    },\n    //勾选一个todo\n    checkTodo: function checkTodo(id) {\n      this.todos.forEach(function (todo) {\n        if (todo.id === id) {\n          //记录bug这里多写了个等于号= =\n          todo.done = !todo.done;\n        }\n      });\n    },\n    //删除一个todo(就是留下来没删掉的，用过滤)\n    //filter方法不改变原数组，所以要重新赋值\n    deleteTodo: function deleteTodo(_, id) {\n      this.todos = this.todos.filter(function (todo) {\n        return todo.id !== id;\n      });\n    },\n    //全选或取消全选\n    checkAllTodo: function checkAllTodo(done) {\n      this.todos.forEach(function (todo) {\n        todo.done = done;\n      });\n    },\n    //清除已完成任务\n    clearAllTodo: function clearAllTodo() {\n      this.todos = this.todos.filter(function (todo) {\n        return !todo.done;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.$bus.$on('checkTodo', this.checkTodo); //console.log('我是app组件，收到了数据')\n\n    pubsub.subscribe('deleteTodo', this.deleteTodo);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off('checkTodo');\n    pubsub.unsubscribe('deleteTodo', this.deleteTodo);\n  },\n  //todos发生变化时候储存在localStorage里\n  watch: {\n    todos: {\n      deep: true,\n      handler: function handler(value) {\n        localStorage.setItem('todos', JSON.stringify(value));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AAEA;AACAA,aADA;AAEAC;AACAC,sBADA;AAEAC,kBAFA;AAGAC;AAHA,GAFA;AAOAC,MAPA,kBAOA;AACA;AACA;AACA;AACAC;AAHA;AAKA,GAbA;AAcAC;AACA;AACAC,WAFA,mBAEAC,OAFA,EAEA;AACA;AACA,KAJA;AAKA;AACAC,aANA,qBAMAC,EANA,EAMA;AACA;AACA;AACA;AACAC;AACA;AACA,OALA;AAMA,KAbA;AAcA;AACA;AACAC,cAhBA,sBAgBAC,CAhBA,EAgBAH,EAhBA,EAgBA;AACA;AACA;AACA,OAFA;AAGA,KApBA;AAqBA;AACAI,gBAtBA,wBAsBAC,IAtBA,EAsBA;AACA;AACAJ;AACA,OAFA;AAGA,KA1BA;AA2BA;AACAK,gBA5BA,0BA4BA;AACA;AACA;AACA,OAFA;AAGA;AAhCA,GAdA;AAgDAC,SAhDA,qBAgDA;AACA,+CADA,CAEA;;AACAC;AACA,GApDA;AAqDAC,eArDA,2BAqDA;AACA;AACAD;AACA,GAxDA;AAyDA;AACAE;AACAf;AACAgB,gBADA;AAEAC,aAFA,mBAEAC,KAFA,EAEA;AACAC;AACA;AAJA;AADA;AA1DA","names":["name","components","MyFooter","MyList","MyHeader","data","todos","methods","addTodo","todoObj","checkTodo","id","todo","deleteTodo","_","checkAllTodo","done","clearAllTodo","mounted","pubsub","beforeDestroy","watch","deep","handler","value","localStorage"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"root\">\n    <div class=\"todo-container\">\n      <div class=\"todo-wrap\">\n        <MyHeader @addTodo=\"addTodo\"/>\n        <MyList :todos=\"todos\"/>\n        <MyFooter \n        :todos=\"todos\" \n        @checkAllTodo=\"checkAllTodo\"\n        @clearAllTodo=\"clearAllTodo\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport pubsub from 'pubsub-js'\nimport MyHeader from \"./components/MyHeader\";\nimport MyList from \"./components/MyList\";\nimport MyFooter from \"./components/MyFooter\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MyFooter,\n    MyList,\n    MyHeader\n  },\n  data() {\n    return {\n      //捞储存在localStorage里的数据\n      //一开始没有数据，展示空数组\n      todos:JSON.parse(localStorage.getItem('todos'))||[]\n    }\n  },\n  methods:{\n    //添加一个todo\n    addTodo(todoObj){\n      this.todos.unshift(todoObj)\n    },\n    //勾选一个todo\n    checkTodo(id){\n      this.todos.forEach(todo => {\n        if(todo.id===id){\n          //记录bug这里多写了个等于号= =\n          todo.done = !todo.done\n        }\n      });\n    },\n    //删除一个todo(就是留下来没删掉的，用过滤)\n    //filter方法不改变原数组，所以要重新赋值\n    deleteTodo(_,id){\n      this.todos = this.todos.filter((todo)=>{\n        return todo.id !==id\n      })\n    },\n    //全选或取消全选\n    checkAllTodo(done){\n      this.todos.forEach((todo)=>{\n        todo.done = done\n      })\n    },\n    //清除已完成任务\n    clearAllTodo(){\n      this.todos = this.todos.filter((todo)=>{\n        return !todo.done\n      })\n    }\n  },\n  mounted(){\n    this.$bus.$on('checkTodo',this.checkTodo)\n    //console.log('我是app组件，收到了数据')\n    pubsub.subscribe('deleteTodo',this.deleteTodo)\n  },\n  beforeDestroy() {\n      this.$bus.$off('checkTodo')\n      pubsub.unsubscribe('deleteTodo',this.deleteTodo)\n    },\n    //todos发生变化时候储存在localStorage里\n  watch:{\n    todos:{\n      deep:true,\n      handler(value){\n        localStorage.setItem('todos',JSON.stringify(value))\n    }\n    }\n  }  \n};\n</script>\n\n<style>\n/*base*/\nbody {\n  background: #fff;\n}\n\n.btn {\n  display: inline-block;\n  padding: 4px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n}\n\n.btn-danger {\n  color: #fff;\n  background-color: #ca514d;\n  border: 1px solid #bd362f;\n}\n\n.btn-danger:hover {\n  color: #fff;\n  background-color: #ca514d;\n}\n\n.btn:focus {\n  outline: none;\n}\n\n.todo-container {\n  width: 600px;\n  margin: 0 auto;\n}\n.todo-container .todo-wrap {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}