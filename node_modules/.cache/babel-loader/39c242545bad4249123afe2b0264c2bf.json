{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'anima';\nimport pubsub from \"pubsub-js\";\nexport default {\n  name: \"MyItem\",\n  props: [\"todo\"],\n  methods: {\n    //勾选或者取消勾选\n    handlerCheck: function handlerCheck(id) {\n      //通知APP把id传过去然后done值取反\n      this.$bus.$emit(\"checkTodo\", id);\n    },\n    //删除某一项\n    handlerDelete: function handlerDelete(id) {\n      //通知APP把id传过去然后删掉\n      if (confirm(\"确定要删除吗\")) {\n        //this.deleteTodo(id)\n        //this.$bus.$emit('deleteTodo',id)\n        pubsub.publish(\"deleteTodo\", id);\n      }\n    },\n    //编辑\n    //疑问：props不能修改但是可以添加？\n    handlerEdit: function handlerEdit(id) {\n      this.$bus.$emit(\"editHandler\", id);\n      this.$nextTick(function () {\n        this.$refs.inputTitle.focus();\n      });\n    },\n    handleBlur: function handleBlur(e, todo) {\n      todo.isEdit = false;\n      if (!e.target.value.trim()) return alert(\"输入不能为空！\");\n      this.$bus.$emit(\"updateTodo\", todo.id, e.target.value);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACAA,gBADA;AAEAC,iBAFA;AAGAC;AACA;AACAC,gBAFA,wBAEAC,EAFA,EAEA;AACA;AACA;AACA,KALA;AAMA;AACAC,iBAPA,yBAOAD,EAPA,EAOA;AACA;AACA;AACA;AACA;AACAE;AACA;AACA,KAdA;AAeA;AACA;AACAC,eAjBA,uBAiBAH,EAjBA,EAiBA;AACA;AACA;AACA;AACA,OAFA;AAGA,KAtBA;AAuBAI,cAvBA,sBAuBAC,CAvBA,EAuBAC,IAvBA,EAuBA;AACAA;AACA;AACA;AACA;AA3BA;AAHA","names":["name","props","methods","handlerCheck","id","handlerDelete","pubsub","handlerEdit","handleBlur","e","todo"],"sourceRoot":"src/components","sources":["MyItem.vue"],"sourcesContent":["<template>\r\n  <transition name=\"todo\" \r\n    appear\r\n    name=animate__bounce\r\n  >\r\n    <li>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          :checked=\"todo.done\"\r\n          @change=\"handlerCheck(todo.id, $event)\"\r\n        />\r\n        <span v-show=\"!todo.isEdit\">{{ todo.title }}</span>\r\n        <input\r\n          type=\"text\"\r\n          :value=\"todo.title\"\r\n          v-show=\"todo.isEdit\"\r\n          @blur=\"handleBlur($event, todo)\"\r\n          ref=\"inputTitle\"\r\n        />\r\n      </label>\r\n      <button class=\"btn btn-danger\" @click=\"handlerDelete(todo.id)\">\r\n        删除\r\n      </button>\r\n      <button class=\"btn btn-edit\" @click=\"handlerEdit(todo.id)\">编辑</button>\r\n    </li>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport 'anima'\r\nimport pubsub from \"pubsub-js\";\r\nexport default {\r\n  name: \"MyItem\",\r\n  props: [\"todo\"],\r\n  methods: {\r\n    //勾选或者取消勾选\r\n    handlerCheck(id) {\r\n      //通知APP把id传过去然后done值取反\r\n      this.$bus.$emit(\"checkTodo\", id);\r\n    },\r\n    //删除某一项\r\n    handlerDelete(id) {\r\n      //通知APP把id传过去然后删掉\r\n      if (confirm(\"确定要删除吗\")) {\r\n        //this.deleteTodo(id)\r\n        //this.$bus.$emit('deleteTodo',id)\r\n        pubsub.publish(\"deleteTodo\", id);\r\n      }\r\n    },\r\n    //编辑\r\n    //疑问：props不能修改但是可以添加？\r\n    handlerEdit(id) {\r\n      this.$bus.$emit(\"editHandler\", id);\r\n      this.$nextTick(function () {\r\n        this.$refs.inputTitle.focus();\r\n      });\r\n    },\r\n    handleBlur(e, todo) {\r\n      todo.isEdit = false;\r\n      if (!e.target.value.trim()) return alert(\"输入不能为空！\");\r\n      this.$bus.$emit(\"updateTodo\", todo.id, e.target.value);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/*item*/\r\nli {\r\n  list-style: none;\r\n  height: 36px;\r\n  line-height: 36px;\r\n  padding: 0 5px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nli label {\r\n  float: left;\r\n  cursor: pointer;\r\n}\r\n\r\nli label li input {\r\n  vertical-align: middle;\r\n  margin-right: 6px;\r\n  position: relative;\r\n  top: -1px;\r\n}\r\n\r\nli button {\r\n  float: right;\r\n  display: none;\r\n  margin-top: 3px;\r\n}\r\n\r\nli:before {\r\n  content: initial;\r\n}\r\n\r\nli:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\nli:hover {\r\n  background-color: rgb(138, 182, 198);\r\n}\r\n\r\nli:hover button {\r\n  display: block;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}